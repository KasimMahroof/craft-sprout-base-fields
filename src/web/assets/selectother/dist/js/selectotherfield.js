/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/web/assets/selectother/src/js/EditableTable.js":
/*!************************************************************!*\
  !*** ./src/web/assets/selectother/src/js/EditableTable.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* global Craft */\nif (_typeof(Craft.SproutSeo) === ( true ? \"undefined\" : undefined)) {\n  Craft.SproutSeo = {};\n}\n/**\n * Editable table class\n */\n\n\nCraft.SproutSeo.EditableTable = Garnish.Base.extend({\n  initialized: false,\n  id: null,\n  baseName: null,\n  columns: null,\n  sorter: null,\n  biggestId: -1,\n  $table: null,\n  $tbody: null,\n  $addRowBtn: null,\n  init: function init(id, baseName, columns, settings) {\n    this.id = id;\n    this.baseName = baseName;\n    this.columns = columns;\n    this.setSettings(settings, Craft.SproutSeo.EditableTable.defaults);\n    this.$table = $('#' + id);\n    this.$tbody = this.$table.children('tbody');\n    this.sorter = new Craft.DataTableSorter(this.$table, {\n      helperClass: 'editabletablesorthelper',\n      copyDraggeeInputValuesToHelper: true\n    });\n\n    if (this.isVisible()) {\n      this.initialize();\n    } else {\n      this.addListener(Garnish.$win, 'resize', 'initializeIfVisible');\n    }\n  },\n  isVisible: function isVisible() {\n    return this.$table.height() > 0;\n  },\n  initialize: function initialize() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.initialized = true;\n    this.removeListener(Garnish.$win, 'resize');\n    var $rows = this.$tbody.children();\n\n    for (var i = 0; i < $rows.length; i++) {\n      new Craft.SproutSeo.EditableTable.Row(this, $rows[i]);\n    }\n\n    this.$addRowBtn = this.$table.next('.buttons').children('.add');\n    this.addListener(this.$addRowBtn, 'activate', 'addRow');\n  },\n  initializeIfVisible: function initializeIfVisible() {\n    if (this.isVisible()) {\n      this.initialize();\n    }\n  },\n  addRow: function addRow() {\n    var rowId = this.settings.rowIdPrefix + (this.biggestId + 1),\n        rowHtml = Craft.SproutSeo.EditableTable.getRowHtml(rowId, this.columns, this.baseName, {}),\n        $tr = $(rowHtml).appendTo(this.$tbody);\n    new Craft.SproutSeo.EditableTable.Row(this, $tr);\n    this.sorter.addItems($tr); // Focus the first input in the row\n\n    $tr.find('input,textarea,select').first().focus();\n    this.settings.onAddRow($tr);\n  }\n}, {\n  textualColTypes: ['singleline', 'multiline', 'number'],\n  defaults: {\n    rowIdPrefix: '',\n    onAddRow: $.noop,\n    onDeleteRow: $.noop\n  },\n  getRowHtml: function getRowHtml(rowId, columns, baseName, values) {\n    var rowHtml = '<tr data-id=\"' + rowId + '\">';\n\n    for (var colId in columns) {\n      var col = columns[colId],\n          name = baseName + '[' + rowId + '][' + colId + ']',\n          value = typeof values[colId] !== 'undefined' ? values[colId] : '',\n          textual = Craft.inArray(col.type, Craft.SproutSeo.EditableTable.textualColTypes);\n      rowHtml += '<td class=\"' + (textual ? 'textual' : '') + ' ' + (typeof col['class'] !== 'undefined' ? col['class'] : '') + '\"' + (typeof col['width'] !== 'undefined' ? ' width=\"' + col['width'] + '\"' : '') + '>';\n\n      switch (col.type) {\n        case 'selectOther':\n          {\n            var isOwnership = baseName.indexOf('ownership') > -1;\n\n            if (isOwnership) {\n              rowHtml += '<div class=\"field sprout-selectother\"><div class=\"select sprout-selectotherdropdown\"><select onchange=\"setDefault(this)\" name=\"' + name + '\">';\n            } else {\n              rowHtml += '<div class=\"field sprout-selectother\"><div class=\"select sprout-selectotherdropdown\"><select name=\"' + name + '\">';\n            }\n\n            var hasOptgroups = false;\n            var firstRow = 'disabled selected';\n\n            for (var key in col.options) {\n              var option = col.options[key];\n\n              if (typeof option.optgroup !== 'undefined') {\n                if (hasOptgroups) {\n                  rowHtml += '</optgroup>';\n                } else {\n                  hasOptgroups = true;\n                }\n\n                rowHtml += '<optgroup label=\"' + option.optgroup + '\">';\n              } else {\n                var optionLabel = typeof option.label !== 'undefined' ? option.label : option,\n                    optionValue = typeof option.value !== 'undefined' ? option.value : key,\n                    optionDisabled = typeof option.disabled !== 'undefined' ? option.disabled : false;\n                rowHtml += '<option ' + firstRow + ' value=\"' + optionValue + '\"' + (optionValue === value ? ' selected' : '') + (optionDisabled ? ' disabled' : '') + '>' + optionLabel + '</option>';\n              }\n\n              firstRow = '';\n            }\n\n            if (hasOptgroups) {\n              rowHtml += '</optgroup>';\n            }\n\n            rowHtml += '</select></div>';\n            rowHtml += '<div class=\"texticon clearable sprout-selectothertext hidden\"><input class=\"text fullwidth\" type=\"text\" name=\"' + name + '\" value=\"\" autocomplete=\"off\"><div class=\"clear\" title=\"Clear\"></div></div>';\n            rowHtml += '</div>';\n            break;\n          }\n\n        case 'checkbox':\n          {\n            rowHtml += '<input type=\"hidden\" name=\"' + name + '\">' + '<input type=\"checkbox\" name=\"' + name + '\" value=\"1\"' + (value ? ' checked' : '') + '>';\n            break;\n          }\n\n        default:\n          {\n            rowHtml += '<input class=\"text fullwidth\" type=\"text\" name=\"' + name + '\" value=\"' + value + '\">';\n          }\n      }\n\n      rowHtml += '</td>';\n    }\n\n    rowHtml += '<td class=\"thin action\"><a class=\"move icon\" title=\"' + Craft.t('sprout-seo', 'Reorder') + '\"></a></td>' + '<td class=\"thin action\"><a class=\"delete icon\" title=\"' + Craft.t('sprout-seo', 'Delete') + '\"></a></td>' + '</tr>';\n    return rowHtml;\n  }\n});\n/**\n * Editable table row class\n */\n\nCraft.SproutSeo.EditableTable.Row = Garnish.Base.extend({\n  table: null,\n  id: null,\n  niceTexts: null,\n  $tr: null,\n  $tds: null,\n  $textareas: null,\n  $deleteBtn: null,\n  init: function init(table, tr) {\n    this.table = table;\n    this.$tr = $(tr);\n    this.$tds = this.$tr.children(); // Get the row ID, sans prefix\n\n    var id = parseInt(this.$tr.attr('data-id').substr(this.table.settings.rowIdPrefix.length));\n\n    if (id > this.table.biggestId) {\n      this.table.biggestId = id;\n    }\n\n    this.$textareas = $();\n    this.niceTexts = [];\n    var textareasByColId = {};\n    var i = 0;\n\n    for (var colId in this.table.columns) {\n      var col = this.table.columns[colId];\n\n      if (Craft.inArray(col.type, Craft.SproutSeo.EditableTable.textualColTypes)) {\n        var $textarea = $('textarea', this.$tds[i]);\n        this.$textareas = this.$textareas.add($textarea);\n        this.addListener($textarea, 'focus', 'onTextareaFocus');\n        this.addListener($textarea, 'mousedown', 'ignoreNextTextareaFocus');\n        this.niceTexts.push(new Garnish.NiceText($textarea, {\n          onHeightChange: $.proxy(this, 'onTextareaHeightChange')\n        }));\n\n        if (col.type === 'singleline' || col.type === 'number') {\n          this.addListener($textarea, 'keypress', {\n            type: col.type\n          }, 'validateKeypress');\n          this.addListener($textarea, 'textchange', {\n            type: col.type\n          }, 'validateValue');\n        }\n\n        textareasByColId[colId] = $textarea;\n      }\n\n      i++;\n    }\n\n    this.initSproutFields(); // Now that all of the text cells have been nice-ified, let's normalize the heights\n\n    this.onTextareaHeightChange(); // Now look for any autopopulate columns\n\n    for (var _colId in this.table.columns) {\n      /**\n       * @param {boolean} col.autopopulate\n       */\n      var _col = this.table.columns[_colId];\n\n      if (_col.autopopulate && typeof textareasByColId[_col.autopopulate] !== 'undefined' && !textareasByColId[_colId].val()) {\n        new Craft.HandleGenerator(textareasByColId[_colId], textareasByColId[_col.autopopulate]);\n      }\n    }\n\n    var $deleteBtn = this.$tr.children().last().find('.delete');\n    this.addListener($deleteBtn, 'click', 'deleteRow');\n  },\n  initSproutFields: function initSproutFields() {\n    Craft.SproutFields.initFields(this.$tr);\n  },\n  onTextareaFocus: function onTextareaFocus(ev) {\n    this.onTextareaHeightChange();\n    var $textarea = $(ev.currentTarget);\n\n    if ($textarea.data('ignoreNextFocus')) {\n      $textarea.data('ignoreNextFocus', false);\n      return;\n    }\n\n    setTimeout(function () {\n      var val = $textarea.val(); // Does the browser support setSelectionRange()?\n\n      if (typeof $textarea[0].setSelectionRange !== 'undefined') {\n        // Select the whole value\n        var length = val.length * 2;\n        $textarea[0].setSelectionRange(0, length);\n      } else {\n        // Refresh the value to get the cursor positioned at the end\n        $textarea.val(val);\n      }\n    }, 0);\n  },\n  ignoreNextTextareaFocus: function ignoreNextTextareaFocus(ev) {\n    $.data(ev.currentTarget, 'ignoreNextFocus', true);\n  },\n  validateKeypress: function validateKeypress(ev) {\n    var keyCode = ev.keyCode ? ev.keyCode : ev.charCode;\n\n    if (!Garnish.isCtrlKeyPressed(ev) && (keyCode === Garnish.RETURN_KEY || ev.data.type === 'number' && !Craft.inArray(keyCode, Craft.SproutSeo.EditableTable.Row.numericKeyCodes))) {\n      ev.preventDefault();\n    }\n  },\n  validateValue: function validateValue(ev) {\n    var safeValue;\n\n    if (ev.data.type === 'number') {\n      // Only grab the number at the beginning of the value (if any)\n      var match = ev.currentTarget.value.match(/^\\s*(-?[\\d\\.]*)/);\n\n      if (match !== null) {\n        safeValue = match[1];\n      } else {\n        safeValue = '';\n      }\n    } else {\n      // Just strip any newlines\n      safeValue = ev.currentTarget.value.replace(/[\\r\\n]/g, '');\n    }\n\n    if (safeValue !== ev.currentTarget.value) {\n      ev.currentTarget.value = safeValue;\n    }\n  },\n  onTextareaHeightChange: function onTextareaHeightChange() {\n    // Keep all the textareas' heights in sync\n    var tallestTextareaHeight = -1;\n\n    for (var i = 0; i < this.niceTexts.length; i++) {\n      if (this.niceTexts[i].height > tallestTextareaHeight) {\n        tallestTextareaHeight = this.niceTexts[i].height;\n      }\n    }\n\n    this.$textareas.css('min-height', tallestTextareaHeight); // If the <td> is still taller, go with that insted\n\n    var tdHeight = this.$textareas.first().parent().height();\n\n    if (tdHeight > tallestTextareaHeight) {\n      this.$textareas.css('min-height', tdHeight);\n    }\n  },\n  deleteRow: function deleteRow() {\n    this.table.sorter.removeItems(this.$tr);\n    this.$tr.remove(); // onDeleteRow callback\n\n    this.table.settings.onDeleteRow(this.$tr);\n  }\n}, {\n  numericKeyCodes: [9\n  /* (tab) */\n  , 8\n  /* (delete) */\n  , 37, 38, 39, 40\n  /* (arrows) */\n  , 45, 91\n  /* (minus) */\n  , 46, 190\n  /* period */\n  , 48, 49, 50, 51, 52, 53, 54, 55, 56, 57\n  /* (0-9) */\n  ]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/web/assets/selectother/src/js/EditableTable.js\n");

/***/ }),

/***/ "./src/web/assets/selectother/src/js/SelectOtherField.js":
/*!***************************************************************!*\
  !*** ./src/web/assets/selectother/src/js/SelectOtherField.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* global Craft */\nif (_typeof(Craft.SproutFields) === ( true ? \"undefined\" : undefined)) {\n  Craft.SproutFields = {};\n}\n\n(function ($) {\n  // Set all the standard Craft.SproutFields.* stuff\n  $.extend(Craft.SproutFields, {\n    initFields: function initFields($container) {\n      $('.sprout-selectother', $container).sproutSelectOther();\n    }\n  }); // -------------------------------------------\n  //  Custom jQuery plugins\n  // -------------------------------------------\n\n  $.extend($.fn, {\n    sproutSelectOther: function sproutSelectOther() {\n      return this.each(function () {\n        if (!$.data(this, 'sprout-selectother')) {\n          new Craft.SproutFields.SelectOtherField(this);\n        }\n      });\n    }\n  });\n  Craft.SproutFields.SelectOtherField = Garnish.Base.extend({\n    $container: null,\n    $dropdownField: null,\n    $textField: null,\n    $clearIcon: null,\n    init: function init(container) {\n      this.$container = $(container);\n      this.$dropdownField = this.$container.find('.sprout-selectotherdropdown select');\n      this.$textField = this.$container.find('.sprout-selectothertext input');\n      this.$clearIcon = this.$container.find('.sprout-selectothertext .clear');\n      this.addListener(this.$dropdownField, 'change', 'handleSelectOtherChange');\n      this.addListener(this.$clearIcon, 'click', 'handleCancelOther');\n    },\n    handleSelectOtherChange: function handleSelectOtherChange() {\n      var selectedValue = this.$dropdownField.val();\n\n      if (selectedValue === 'custom') {\n        // Hide the Select Field and it's wrapping div\n        this.$dropdownField.parent().addClass('hidden'); // Show the Text Field and display the existing value for editing\n\n        this.$textField.parent().removeClass('hidden');\n\n        if (this.$textField.val().indexOf('{') > -1) {\n          // If the setting is using custom Twig syntax, don't clear the field\n          this.$textField.focus().select();\n        } else {\n          // If the setting is not using Twig syntax, clear the field so the user sees the placeholder example\n          this.$textField.val('').focus().select();\n        }\n      } else {\n        // Store the selected value in the other field, as it takes precedence\n        this.$textField.val(selectedValue);\n      }\n    },\n    handleCancelOther: function handleCancelOther() {\n      // Hide our Custom text field\n      this.$textField.parent().addClass('hidden'); // Show our dropdown again\n\n      this.$dropdownField.parent().removeClass('hidden');\n    }\n  }); // Add support to Sprout Forms edit modal window\n\n  var content = $(\"#sprout-content\");\n\n  if (content.length === 0) {\n    content = $(\"#content\");\n  } // Initialize the SelectOther Field\n\n\n  Craft.SproutFields.initFields($(content));\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2ViL2Fzc2V0cy9zZWxlY3RvdGhlci9zcmMvanMvU2VsZWN0T3RoZXJGaWVsZC5qcz8yOGRmIl0sIm5hbWVzIjpbIkNyYWZ0IiwiU3Byb3V0RmllbGRzIiwiJCIsImV4dGVuZCIsImluaXRGaWVsZHMiLCIkY29udGFpbmVyIiwic3Byb3V0U2VsZWN0T3RoZXIiLCJmbiIsImVhY2giLCJkYXRhIiwiU2VsZWN0T3RoZXJGaWVsZCIsIkdhcm5pc2giLCJCYXNlIiwiJGRyb3Bkb3duRmllbGQiLCIkdGV4dEZpZWxkIiwiJGNsZWFySWNvbiIsImluaXQiLCJjb250YWluZXIiLCJmaW5kIiwiYWRkTGlzdGVuZXIiLCJoYW5kbGVTZWxlY3RPdGhlckNoYW5nZSIsInNlbGVjdGVkVmFsdWUiLCJ2YWwiLCJwYXJlbnQiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiaW5kZXhPZiIsImZvY3VzIiwic2VsZWN0IiwiaGFuZGxlQ2FuY2VsT3RoZXIiLCJjb250ZW50IiwibGVuZ3RoIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUEsSUFBSSxRQUFPQSxLQUFLLENBQUNDLFlBQWIsdUNBQUosRUFBb0Q7QUFDaERELE9BQUssQ0FBQ0MsWUFBTixHQUFxQixFQUFyQjtBQUNIOztBQUVELENBQUMsVUFBU0MsQ0FBVCxFQUFZO0FBRWI7QUFDSUEsR0FBQyxDQUFDQyxNQUFGLENBQVNILEtBQUssQ0FBQ0MsWUFBZixFQUNJO0FBQ0lHLGNBQVUsRUFBRSxvQkFBU0MsVUFBVCxFQUFxQjtBQUM3QkgsT0FBQyxDQUFDLHFCQUFELEVBQXdCRyxVQUF4QixDQUFELENBQXFDQyxpQkFBckM7QUFDSDtBQUhMLEdBREosRUFIUyxDQVViO0FBQ0E7QUFDQTs7QUFFSUosR0FBQyxDQUFDQyxNQUFGLENBQVNELENBQUMsQ0FBQ0ssRUFBWCxFQUFlO0FBQ1hELHFCQUFpQixFQUFFLDZCQUFXO0FBQzFCLGFBQU8sS0FBS0UsSUFBTCxDQUFVLFlBQVc7QUFDeEIsWUFBSSxDQUFDTixDQUFDLENBQUNPLElBQUYsQ0FBTyxJQUFQLEVBQWEsb0JBQWIsQ0FBTCxFQUF5QztBQUNyQyxjQUFJVCxLQUFLLENBQUNDLFlBQU4sQ0FBbUJTLGdCQUF2QixDQUF3QyxJQUF4QztBQUNIO0FBQ0osT0FKTSxDQUFQO0FBS0g7QUFQVSxHQUFmO0FBVUFWLE9BQUssQ0FBQ0MsWUFBTixDQUFtQlMsZ0JBQW5CLEdBQXNDQyxPQUFPLENBQUNDLElBQVIsQ0FBYVQsTUFBYixDQUFvQjtBQUN0REUsY0FBVSxFQUFFLElBRDBDO0FBR3REUSxrQkFBYyxFQUFFLElBSHNDO0FBSXREQyxjQUFVLEVBQUUsSUFKMEM7QUFLdERDLGNBQVUsRUFBRSxJQUwwQztBQU90REMsUUFBSSxFQUFFLGNBQVNDLFNBQVQsRUFBb0I7QUFDdEIsV0FBS1osVUFBTCxHQUFrQkgsQ0FBQyxDQUFDZSxTQUFELENBQW5CO0FBRUEsV0FBS0osY0FBTCxHQUFzQixLQUFLUixVQUFMLENBQWdCYSxJQUFoQixDQUFxQixvQ0FBckIsQ0FBdEI7QUFDQSxXQUFLSixVQUFMLEdBQWtCLEtBQUtULFVBQUwsQ0FBZ0JhLElBQWhCLENBQXFCLCtCQUFyQixDQUFsQjtBQUNBLFdBQUtILFVBQUwsR0FBa0IsS0FBS1YsVUFBTCxDQUFnQmEsSUFBaEIsQ0FBcUIsZ0NBQXJCLENBQWxCO0FBRUEsV0FBS0MsV0FBTCxDQUFpQixLQUFLTixjQUF0QixFQUFzQyxRQUF0QyxFQUFnRCx5QkFBaEQ7QUFDQSxXQUFLTSxXQUFMLENBQWlCLEtBQUtKLFVBQXRCLEVBQWtDLE9BQWxDLEVBQTJDLG1CQUEzQztBQUNILEtBaEJxRDtBQWtCdERLLDJCQUF1QixFQUFFLG1DQUFXO0FBQ2hDLFVBQUlDLGFBQWEsR0FBRyxLQUFLUixjQUFMLENBQW9CUyxHQUFwQixFQUFwQjs7QUFFQSxVQUFJRCxhQUFhLEtBQUssUUFBdEIsRUFBZ0M7QUFDNUI7QUFDQSxhQUFLUixjQUFMLENBQW9CVSxNQUFwQixHQUE2QkMsUUFBN0IsQ0FBc0MsUUFBdEMsRUFGNEIsQ0FJNUI7O0FBQ0EsYUFBS1YsVUFBTCxDQUFnQlMsTUFBaEIsR0FBeUJFLFdBQXpCLENBQXFDLFFBQXJDOztBQUNBLFlBQUksS0FBS1gsVUFBTCxDQUFnQlEsR0FBaEIsR0FBc0JJLE9BQXRCLENBQThCLEdBQTlCLElBQXFDLENBQUMsQ0FBMUMsRUFBNkM7QUFDekM7QUFDQSxlQUFLWixVQUFMLENBQWdCYSxLQUFoQixHQUF3QkMsTUFBeEI7QUFDSCxTQUhELE1BR087QUFDSDtBQUNBLGVBQUtkLFVBQUwsQ0FBZ0JRLEdBQWhCLENBQW9CLEVBQXBCLEVBQXdCSyxLQUF4QixHQUFnQ0MsTUFBaEM7QUFDSDtBQUVKLE9BZEQsTUFjTztBQUNIO0FBQ0EsYUFBS2QsVUFBTCxDQUFnQlEsR0FBaEIsQ0FBb0JELGFBQXBCO0FBQ0g7QUFFSixLQXhDcUQ7QUEwQ3REUSxxQkFBaUIsRUFBRSw2QkFBVztBQUUxQjtBQUNBLFdBQUtmLFVBQUwsQ0FBZ0JTLE1BQWhCLEdBQXlCQyxRQUF6QixDQUFrQyxRQUFsQyxFQUgwQixDQUsxQjs7QUFDQSxXQUFLWCxjQUFMLENBQW9CVSxNQUFwQixHQUE2QkUsV0FBN0IsQ0FBeUMsUUFBekM7QUFFSDtBQWxEcUQsR0FBcEIsQ0FBdEMsQ0F4QlMsQ0E4RVQ7O0FBQ0EsTUFBSUssT0FBTyxHQUFHNUIsQ0FBQyxDQUFDLGlCQUFELENBQWY7O0FBQ0EsTUFBSTRCLE9BQU8sQ0FBQ0MsTUFBUixLQUFtQixDQUF2QixFQUEwQjtBQUN0QkQsV0FBTyxHQUFHNUIsQ0FBQyxDQUFDLFVBQUQsQ0FBWDtBQUNILEdBbEZRLENBb0ZUOzs7QUFDQUYsT0FBSyxDQUFDQyxZQUFOLENBQW1CRyxVQUFuQixDQUE4QkYsQ0FBQyxDQUFDNEIsT0FBRCxDQUEvQjtBQUVILENBdkZELEVBdUZHRSxNQXZGSCIsImZpbGUiOiIuL3NyYy93ZWIvYXNzZXRzL3NlbGVjdG90aGVyL3NyYy9qcy9TZWxlY3RPdGhlckZpZWxkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIENyYWZ0ICovXG5cbmlmICh0eXBlb2YgQ3JhZnQuU3Byb3V0RmllbGRzID09PSB0eXBlb2YgdW5kZWZpbmVkKSB7XG4gICAgQ3JhZnQuU3Byb3V0RmllbGRzID0ge307XG59XG5cbihmdW5jdGlvbigkKSB7XG5cbi8vIFNldCBhbGwgdGhlIHN0YW5kYXJkIENyYWZ0LlNwcm91dEZpZWxkcy4qIHN0dWZmXG4gICAgJC5leHRlbmQoQ3JhZnQuU3Byb3V0RmllbGRzLFxuICAgICAgICB7XG4gICAgICAgICAgICBpbml0RmllbGRzOiBmdW5jdGlvbigkY29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgJCgnLnNwcm91dC1zZWxlY3RvdGhlcicsICRjb250YWluZXIpLnNwcm91dFNlbGVjdE90aGVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgQ3VzdG9tIGpRdWVyeSBwbHVnaW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAkLmV4dGVuZCgkLmZuLCB7XG4gICAgICAgIHNwcm91dFNlbGVjdE90aGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEkLmRhdGEodGhpcywgJ3Nwcm91dC1zZWxlY3RvdGhlcicpKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ldyBDcmFmdC5TcHJvdXRGaWVsZHMuU2VsZWN0T3RoZXJGaWVsZCh0aGlzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgQ3JhZnQuU3Byb3V0RmllbGRzLlNlbGVjdE90aGVyRmllbGQgPSBHYXJuaXNoLkJhc2UuZXh0ZW5kKHtcbiAgICAgICAgJGNvbnRhaW5lcjogbnVsbCxcblxuICAgICAgICAkZHJvcGRvd25GaWVsZDogbnVsbCxcbiAgICAgICAgJHRleHRGaWVsZDogbnVsbCxcbiAgICAgICAgJGNsZWFySWNvbjogbnVsbCxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbihjb250YWluZXIpIHtcbiAgICAgICAgICAgIHRoaXMuJGNvbnRhaW5lciA9ICQoY29udGFpbmVyKTtcblxuICAgICAgICAgICAgdGhpcy4kZHJvcGRvd25GaWVsZCA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCcuc3Byb3V0LXNlbGVjdG90aGVyZHJvcGRvd24gc2VsZWN0Jyk7XG4gICAgICAgICAgICB0aGlzLiR0ZXh0RmllbGQgPSB0aGlzLiRjb250YWluZXIuZmluZCgnLnNwcm91dC1zZWxlY3RvdGhlcnRleHQgaW5wdXQnKTtcbiAgICAgICAgICAgIHRoaXMuJGNsZWFySWNvbiA9IHRoaXMuJGNvbnRhaW5lci5maW5kKCcuc3Byb3V0LXNlbGVjdG90aGVydGV4dCAuY2xlYXInKTtcblxuICAgICAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcih0aGlzLiRkcm9wZG93bkZpZWxkLCAnY2hhbmdlJywgJ2hhbmRsZVNlbGVjdE90aGVyQ2hhbmdlJyk7XG4gICAgICAgICAgICB0aGlzLmFkZExpc3RlbmVyKHRoaXMuJGNsZWFySWNvbiwgJ2NsaWNrJywgJ2hhbmRsZUNhbmNlbE90aGVyJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaGFuZGxlU2VsZWN0T3RoZXJDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbGV0IHNlbGVjdGVkVmFsdWUgPSB0aGlzLiRkcm9wZG93bkZpZWxkLnZhbCgpO1xuXG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRWYWx1ZSA9PT0gJ2N1c3RvbScpIHtcbiAgICAgICAgICAgICAgICAvLyBIaWRlIHRoZSBTZWxlY3QgRmllbGQgYW5kIGl0J3Mgd3JhcHBpbmcgZGl2XG4gICAgICAgICAgICAgICAgdGhpcy4kZHJvcGRvd25GaWVsZC5wYXJlbnQoKS5hZGRDbGFzcygnaGlkZGVuJyk7XG5cbiAgICAgICAgICAgICAgICAvLyBTaG93IHRoZSBUZXh0IEZpZWxkIGFuZCBkaXNwbGF5IHRoZSBleGlzdGluZyB2YWx1ZSBmb3IgZWRpdGluZ1xuICAgICAgICAgICAgICAgIHRoaXMuJHRleHRGaWVsZC5wYXJlbnQoKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuJHRleHRGaWVsZC52YWwoKS5pbmRleE9mKCd7JykgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgc2V0dGluZyBpcyB1c2luZyBjdXN0b20gVHdpZyBzeW50YXgsIGRvbid0IGNsZWFyIHRoZSBmaWVsZFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiR0ZXh0RmllbGQuZm9jdXMoKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgc2V0dGluZyBpcyBub3QgdXNpbmcgVHdpZyBzeW50YXgsIGNsZWFyIHRoZSBmaWVsZCBzbyB0aGUgdXNlciBzZWVzIHRoZSBwbGFjZWhvbGRlciBleGFtcGxlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHRleHRGaWVsZC52YWwoJycpLmZvY3VzKCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFN0b3JlIHRoZSBzZWxlY3RlZCB2YWx1ZSBpbiB0aGUgb3RoZXIgZmllbGQsIGFzIGl0IHRha2VzIHByZWNlZGVuY2VcbiAgICAgICAgICAgICAgICB0aGlzLiR0ZXh0RmllbGQudmFsKHNlbGVjdGVkVmFsdWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sXG5cbiAgICAgICAgaGFuZGxlQ2FuY2VsT3RoZXI6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAvLyBIaWRlIG91ciBDdXN0b20gdGV4dCBmaWVsZFxuICAgICAgICAgICAgdGhpcy4kdGV4dEZpZWxkLnBhcmVudCgpLmFkZENsYXNzKCdoaWRkZW4nKTtcblxuICAgICAgICAgICAgLy8gU2hvdyBvdXIgZHJvcGRvd24gYWdhaW5cbiAgICAgICAgICAgIHRoaXMuJGRyb3Bkb3duRmllbGQucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuXG4gICAgICAgIH1cblxuICAgIH0pO1xuXG4gICAgLy8gQWRkIHN1cHBvcnQgdG8gU3Byb3V0IEZvcm1zIGVkaXQgbW9kYWwgd2luZG93XG4gICAgbGV0IGNvbnRlbnQgPSAkKFwiI3Nwcm91dC1jb250ZW50XCIpO1xuICAgIGlmIChjb250ZW50Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb250ZW50ID0gJChcIiNjb250ZW50XCIpO1xuICAgIH1cblxuICAgIC8vIEluaXRpYWxpemUgdGhlIFNlbGVjdE90aGVyIEZpZWxkXG4gICAgQ3JhZnQuU3Byb3V0RmllbGRzLmluaXRGaWVsZHMoJChjb250ZW50KSk7XG5cbn0pKGpRdWVyeSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/web/assets/selectother/src/js/SelectOtherField.js\n");

/***/ }),

/***/ 4:
/*!**************************************************************************************************************************!*\
  !*** multi ./src/web/assets/selectother/src/js/EditableTable.js ./src/web/assets/selectother/src/js/SelectOtherField.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/benparizek/Projects/Plugins-Craft3/barrelstrength/sprout-base-fields/src/web/assets/selectother/src/js/EditableTable.js */"./src/web/assets/selectother/src/js/EditableTable.js");
module.exports = __webpack_require__(/*! /Users/benparizek/Projects/Plugins-Craft3/barrelstrength/sprout-base-fields/src/web/assets/selectother/src/js/SelectOtherField.js */"./src/web/assets/selectother/src/js/SelectOtherField.js");


/***/ })

/******/ });